{
  "ID": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
  "Root": {
    "alive": true,
    "content": [
      "94924502-ec8b-4d3c-8a8b-c293d79cbaf4",
      "6138d828-027b-4efe-a9b9-cf57870a8267",
      "ed30a6db-29bd-4f2d-9f9d-e51faeef56bd",
      "5cc51ead-f091-4be2-b6d8-ab2f5d4f80b5",
      "4d5c13a3-2fe5-4385-8715-25723d66c459",
      "890a7bd3-fd7d-4b65-93ee-fe4e03695bf5",
      "b671023b-f971-44dc-ab74-5320a4a353cd",
      "07114496-4589-4361-b32a-8fc2c2c3c896",
      "1357f32f-256a-4d07-a68e-cae8d150e5c0",
      "8db48922-3d84-46ce-8106-37ebba38cd02",
      "48bf2237-8637-4256-b2c4-6911e5bddc77",
      "4b34a06b-15c6-4a14-aaad-d5cc4257306e",
      "249ef718-0536-4d19-ad45-0278f804adba",
      "3e346ec6-0590-4fbe-a50d-046a8fd6a874",
      "1af2f912-8324-49a3-98f9-8eba4a23a675",
      "8bb171ca-055e-40ac-8ef4-560dc604d1fc",
      "226e841d-b182-489c-804f-1e20f4d71bed",
      "dc514f8f-075a-4722-b5cc-cd2787a569c2",
      "a8e5f815-b2c9-4572-9816-4675fcfdfbdf",
      "fbffda81-3b76-40ea-814d-b0add203eac5",
      "7450795e-6411-41d3-a459-ffae85bac757",
      "fae6738d-4737-4d6f-b9fb-1d56e8957af3",
      "330ec460-07e8-4409-a806-7a31b11c38b8",
      "5cf0ee19-e9b9-4456-b7cb-b9bbf83aca13",
      "44000b71-6317-4048-b48a-f85290b8df4c",
      "b3f9b3d6-6505-4d62-a4fa-9c026a268fcc",
      "930e8487-89ea-4346-ae23-d570cbe6f3b1",
      "ad8eca2c-ef38-405b-9604-d66a48694a97",
      "2db3b51d-fa3e-42d0-9c70-fbd5c5416ae3",
      "960091a8-a78c-4486-ad87-8f142ec8f2c4",
      "cff732c1-b782-480c-add1-9e269f97b109",
      "40d2d275-6ff8-414c-98d4-83d15fe52870",
      "9aea3f3c-a004-4afd-9816-5c63ad20c172",
      "ca6597d7-e802-4d4e-9522-0e6197de19c9",
      "8b4e28cb-cedb-4feb-a50f-34e72dcb0a6b",
      "18821237-1276-43c2-8ae5-83adc78cadbd",
      "4bff7ef7-8685-4cfc-bd76-df674abeecce",
      "5c2d3535-7e9a-47f4-9c00-9188f8e1d500",
      "0990f2db-dcb6-4990-91c8-3d4616371c8f",
      "49b26db8-4cfc-4b91-81d4-982e2d145581",
      "c2f0b8fa-a241-4701-be71-59c4a01fd702",
      "4a028f74-18be-4716-aa86-b355439d4c00",
      "04fbbb6c-8627-42ce-a72f-8a4a00f870cf",
      "7a2014a2-c7df-483f-9297-8111a3fc2307",
      "0074cd53-4dba-4453-b478-6f37f9ef3cdb",
      "815368c2-5e03-41d3-8e4e-a772782f3af8",
      "05cf719b-ad39-4c31-bfa1-d5c13e397f39",
      "0df25a72-ea93-4ce3-8d0f-8ecd5272b78b",
      "30ae5908-09f6-437c-a915-531055dae7cc",
      "32690c31-5bbb-4c2c-a0c2-ff670ab5ee2b",
      "bd703bea-1bda-47d1-9d49-e15e97345b1c",
      "424248bf-68cb-4818-b908-73ace72eb0c2",
      "009fb3c0-9bcf-4b51-ab0e-5a459d5c4fbb",
      "901f5f2a-7bb4-49ff-9197-1b1b5c0728a5",
      "478b1717-c394-4a0d-8800-da0bdb075f56",
      "3d1d8976-3059-43b3-8cf1-2b0beafb8a46",
      "6ad283ca-7aa8-4946-9f16-3d539fa4d7f1",
      "9e022514-5381-40b1-8266-6dee52beb6e4",
      "1d034284-e1de-4b45-bb53-a1a296009351",
      "c84705cc-162f-4379-a8ae-21b747535043",
      "fb00d227-c213-42e5-ae62-b1ecffb73474",
      "a240e550-3121-4174-a906-3f65fae2b893",
      "1371cb02-dbb9-41ea-a924-21602fd4bc32",
      "9b018102-234d-4afa-8e42-b6d686743a5a",
      "b953c2a9-cdca-4c5a-b39b-39581e875977",
      "9b1c6406-4fc2-4548-b5fe-e597005a1bae",
      "c6b596cd-7b85-4c51-b12f-620e3e14a323",
      "46d64ccd-26f4-4674-a2cd-c18120475ce2",
      "a6edeaf3-c247-44c6-a26c-dcf73d50f0f1",
      "89e8e4d2-2982-43b5-9d4c-ec60ae8cc94b",
      "e7c194ab-12ac-4f6a-a1ec-e66bef8bb572",
      "e2d047c6-0690-44a3-bd69-437eebcfcc13",
      "7a67b357-56d6-4229-adfa-b0556ab71118",
      "65d3adb0-6112-47bd-8da6-5599f412382c",
      "d04ce5f2-15bb-4c86-8ed0-62dda0c3b87e",
      "38885ea9-f21a-4ea1-9bb0-a6bbbb06662f",
      "ca8d9369-b9f8-40b0-a76f-32c9276d50a0",
      "28a50d22-1b58-4223-becf-be424dfd4b1b",
      "215567c4-17bb-4520-affc-3e88712363be",
      "b911bcd7-86c1-4bde-bb18-91502cee11cd",
      "4747af45-5ec3-415f-8008-66d83cfd99b0",
      "49640c88-34a7-4e6b-ac22-d23fe1199b01",
      "91aaf832-8a5e-46e8-a848-7711322128bf",
      "be5c0016-56b2-4da2-8724-d216692e9886",
      "2ebc0f3d-a88e-40f0-84de-6c993e903ff1",
      "1035bcf7-6b37-441f-b62c-592857beb23f",
      "33cd90f1-cfec-4d49-b708-d7060fdddf9c",
      "72ae64d7-0e49-44dc-8f13-65620bf34cec",
      "27a1a6ad-dbcd-4738-a927-6caa9a28361d",
      "84b62d1c-b119-4a37-b727-c408e9760398",
      "d67aaa93-a374-4ab4-8efd-2f03c352d071",
      "d80b3225-046c-4c85-a480-4990e25288de",
      "32bece2b-8c41-402c-9ea0-902ba88f23e3"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1531888787047,
    "file_ids": [
      "bd740d50-d936-4bcf-92b9-f7bf0211cc57"
    ],
    "format": {
      "page_cover": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bd740d50-d936-4bcf-92b9-f7bf0211cc57/header-02.jpg",
      "page_full_width": true,
      "page_small_text": true,
      "page_cover_position": 0.5
    },
    "id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
    "ignore_block_count": true,
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1548058779154,
    "parent_id": "7495260a-1daa-4611-8858-ad2e049e77e6",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Advanced command execution in Go with os/exec"
        ]
      ]
    },
    "type": "page",
    "version": 194,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "94924502-ec8b-4d3c-8a8b-c293d79cbaf4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889003610,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Id: wOYk"
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "Id: wOYk"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "6138d828-027b-4efe-a9b9-cf57870a8267",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Tags: go"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "Tags: go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "ed30a6db-29bd-4f2d-9f9d-e51faeef56bd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CreatedAt: 2017-06-23T09:43:49Z"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "CreatedAt: 2017-06-23T09:43:49Z"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "5cc51ead-f091-4be2-b6d8-ab2f5d4f80b5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1532405889441,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "UpdatedAt: 2017-07-09T01:52:50Z"
            ]
          ]
        },
        "type": "text",
        "version": 4,
        "inline_content": [
          {
            "Text": "UpdatedAt: 2017-07-09T01:52:50Z"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "4d5c13a3-2fe5-4385-8715-25723d66c459",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Collection: go-cookbook"
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "Collection: go-cookbook"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888986213,
        "id": "890a7bd3-fd7d-4b65-93ee-fe4e03695bf5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888986220,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Description: Examples of using os/exec library to execute external programs in Go."
            ]
          ]
        },
        "type": "text",
        "version": 2,
        "inline_content": [
          {
            "Text": "Description: Examples of using os/exec library to execute external programs in Go."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888991592,
        "id": "b671023b-f971-44dc-ab74-5320a4a353cd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888991592,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "type": "text",
        "version": 4
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787031,
        "id": "07114496-4589-4361-b32a-8fc2c2c3c896",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787031,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go has excellent support for executing external programs. Let’s start at the beginning."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Go has excellent support for executing external programs. Let’s start at the beginning."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055027642,
        "id": "1357f32f-256a-4d07-a68e-cae8d150e5c0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055374660,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "In our examples we'll be running "
            ],
            [
              "ls -lah",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " command as it produces an output. There is no "
            ],
            [
              "ls",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " on Windows so you can change that to e.g. "
            ],
            [
              "tasklist",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 764,
        "inline_content": [
          {
            "Text": "In our examples we'll be running "
          },
          {
            "Text": "ls -lah",
            "AttrFlags": 2
          },
          {
            "Text": " command as it produces an output. There is no "
          },
          {
            "Text": "ls",
            "AttrFlags": 2
          },
          {
            "Text": " on Windows so you can change that to e.g. "
          },
          {
            "Text": "tasklist",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548054792044,
        "id": "8db48922-3d84-46ce-8106-37ebba38cd02",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548054800240,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Running a command"
            ]
          ]
        },
        "type": "sub_header",
        "version": 52,
        "inline_content": [
          {
            "Text": "Running a command"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055158750,
        "id": "48bf2237-8637-4256-b2c4-6911e5bddc77",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055442299,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "\tcmd := exec.Command(\"ls\", \"-lah\")\n\tif runtime.GOOS == \"windows\" {\n\t\tcmd = exec.Command(\"tasklist\")\n\t}\n\terr := cmd.Run()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n\t}"
            ]
          ]
        },
        "type": "code",
        "version": 10,
        "code": "\tcmd := exec.Command(\"ls\", \"-lah\")\n\tif runtime.GOOS == \"windows\" {\n\t\tcmd = exec.Command(\"tasklist\")\n\t}\n\terr := cmd.Run()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n\t}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055396844,
        "id": "4b34a06b-15c6-4a14-aaad-d5cc4257306e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055453083,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/01-simple-exec-v1.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec-v1.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 6,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/01-simple-exec-v1.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec-v1.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055454414,
        "id": "249ef718-0536-4d19-ad45-0278f804adba",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055543585,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If you run it, nothing seems to happen. Fear not, the command has actually been executed."
            ]
          ]
        },
        "type": "text",
        "version": 325,
        "inline_content": [
          {
            "Text": "If you run it, nothing seems to happen. Fear not, the command has actually been executed."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055542659,
        "id": "3e346ec6-0590-4fbe-a50d-046a8fd6a874",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055594704,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If we were running "
            ],
            [
              "ls -lah",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " in the shell, the shell would copy programs' stdout and stderr to console, so that we can see it."
            ]
          ]
        },
        "type": "text",
        "version": 277,
        "inline_content": [
          {
            "Text": "If we were running "
          },
          {
            "Text": "ls -lah",
            "AttrFlags": 2
          },
          {
            "Text": " in the shell, the shell would copy programs' stdout and stderr to console, so that we can see it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055595163,
        "id": "1af2f912-8324-49a3-98f9-8eba4a23a675",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055647263,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We're executing the program via Go standard library function and by default stdout and stderr are discarded."
            ]
          ]
        },
        "type": "text",
        "version": 260,
        "inline_content": [
          {
            "Text": "We're executing the program via Go standard library function and by default stdout and stderr are discarded."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055629939,
        "id": "8bb171ca-055e-40ac-8ef4-560dc604d1fc",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055655857,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Running a command and showing output"
            ]
          ]
        },
        "type": "sub_header",
        "version": 98,
        "inline_content": [
          {
            "Text": "Running a command and showing output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055666750,
        "id": "226e841d-b182-489c-804f-1e20f4d71bed",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055944362,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To let the human see the output, we can connect the output ("
            ],
            [
              "cmd.Stdout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "cmd.Stderr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ") of the program we're executing to "
            ],
            [
              "os.Stdout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "os.Stderr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which is the output of our program:  "
            ]
          ]
        },
        "type": "text",
        "version": 671,
        "inline_content": [
          {
            "Text": "To let the human see the output, we can connect the output ("
          },
          {
            "Text": "cmd.Stdout",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "cmd.Stderr",
            "AttrFlags": 2
          },
          {
            "Text": ") of the program we're executing to "
          },
          {
            "Text": "os.Stdout",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "os.Stderr",
            "AttrFlags": 2
          },
          {
            "Text": ", which is the output of our program:  "
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055663537,
        "id": "dc514f8f-075a-4722-b5cc-cd2787a569c2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055829406,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "\tcmd := exec.Command(\"ls\", \"-lah\")\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\terr := cmd.Run()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n\t}"
            ]
          ]
        },
        "type": "code",
        "version": 12,
        "code": "\tcmd := exec.Command(\"ls\", \"-lah\")\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\terr := cmd.Run()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n\t}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055674126,
        "id": "a8e5f815-b2c9-4572-9816-4675fcfdfbdf",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548055753301,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/01-simple-exec-v2.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec-v2.go"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 105,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/01-simple-exec-v2.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec-v2.go"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056347177,
        "id": "fbffda81-3b76-40ea-814d-b0add203eac5",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056509276,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "cmd.Stdout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "cmd.Stderr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are declared as "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface so we can set them to any type that implements "
            ],
            [
              "Write()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " method, like "
            ],
            [
              "os.File",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " or an in-memory buffer "
            ],
            [
              "bytes.Buffer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 855,
        "inline_content": [
          {
            "Text": "cmd.Stdout",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "cmd.Stderr",
            "AttrFlags": 2
          },
          {
            "Text": " are declared as "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": " interface so we can set them to any type that implements "
          },
          {
            "Text": "Write()",
            "AttrFlags": 2
          },
          {
            "Text": " method, like "
          },
          {
            "Text": "os.File",
            "AttrFlags": 2
          },
          {
            "Text": " or an in-memory buffer "
          },
          {
            "Text": "bytes.Buffer",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056459728,
        "id": "7450795e-6411-41d3-a459-ffae85bac757",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056462637,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "io.Reader",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " are very simple, yet very powerful, abstractions."
            ]
          ]
        },
        "type": "text",
        "version": 7,
        "inline_content": [
          {
            "Text": "io.Reader",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": " are very simple, yet very powerful, abstractions."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787032,
        "id": "fae6738d-4737-4d6f-b9fb-1d56e8957af3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787032,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Running a command and capturing the output"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Running a command and capturing the output"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548055951807,
        "id": "330ec460-07e8-4409-a806-7a31b11c38b8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056128039,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The above examples allows human to see the output but sometimes we want to capture the output and analyze it:"
            ]
          ]
        },
        "type": "text",
        "version": 319,
        "inline_content": [
          {
            "Text": "The above examples allows human to see the output but sometimes we want to capture the output and analyze it:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787032,
        "id": "5cf0ee19-e9b9-4456-b7cb-b9bbf83aca13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889010480,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"combined out:\\n%s\\n\", string(out))\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"combined out:\\n%s\\n\", string(out))\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "44000b71-6317-4048-b48a-f85290b8df4c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056012604,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/01-simple-exec-v3.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec-v3.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 10,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/01-simple-exec-v3.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/01-simple-exec-v3.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056016246,
        "id": "b3f9b3d6-6505-4d62-a4fa-9c026a268fcc",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056152471,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "CombinedOutput",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " runs a command and returns combined stdout and stderr."
            ]
          ]
        },
        "type": "text",
        "version": 179,
        "inline_content": [
          {
            "Text": "CombinedOutput",
            "AttrFlags": 2
          },
          {
            "Text": " runs a command and returns combined stdout and stderr."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056152787,
        "id": "930e8487-89ea-4346-ae23-d570cbe6f3b1",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056164645,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Behind the scenes of "
            ],
            [
              "CombinedOutput",
              [
                [
                  "c"
                ]
              ]
            ]
          ]
        },
        "type": "sub_header",
        "version": 108,
        "inline_content": [
          {
            "Text": "Behind the scenes of "
          },
          {
            "Text": "CombinedOutput",
            "AttrFlags": 2
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056165279,
        "id": "ad8eca2c-ef38-405b-9604-d66a48694a97",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056233144,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The good thing about Go is that it's open source so we can peek at how a given functionality is implemented."
            ]
          ]
        },
        "type": "text",
        "version": 257,
        "inline_content": [
          {
            "Text": "The good thing about Go is that it's open source so we can peek at how a given functionality is implemented."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056233352,
        "id": "2db3b51d-fa3e-42d0-9c70-fbd5c5416ae3",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056662454,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another good thing is that most of the code in the standard library is simple. Here's how "
            ],
            [
              "CombinedOutput",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is implemented:"
            ]
          ]
        },
        "type": "text",
        "version": 501,
        "inline_content": [
          {
            "Text": "Another good thing is that most of the code in the standard library is simple. Here's how "
          },
          {
            "Text": "CombinedOutput",
            "AttrFlags": 2
          },
          {
            "Text": " is implemented:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056298376,
        "id": "960091a8-a78c-4486-ad87-8f142ec8f2c4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056306250,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func (c *Cmd) CombinedOutput() ([]byte, error) {\n\tif c.Stdout != nil {\n\t\treturn nil, errors.New(\"exec: Stdout already set\")\n\t}\n\tif c.Stderr != nil {\n\t\treturn nil, errors.New(\"exec: Stderr already set\")\n\t}\n\tvar b bytes.Buffer\n\tc.Stdout = \u0026b\n\tc.Stderr = \u0026b\n\terr := c.Run()\n\treturn b.Bytes(), err\n}"
            ]
          ]
        },
        "type": "code",
        "version": 8,
        "code": "func (c *Cmd) CombinedOutput() ([]byte, error) {\n\tif c.Stdout != nil {\n\t\treturn nil, errors.New(\"exec: Stdout already set\")\n\t}\n\tif c.Stderr != nil {\n\t\treturn nil, errors.New(\"exec: Stderr already set\")\n\t}\n\tvar b bytes.Buffer\n\tc.Stdout = \u0026b\n\tc.Stderr = \u0026b\n\terr := c.Run()\n\treturn b.Bytes(), err\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056312589,
        "id": "cff732c1-b782-480c-add1-9e269f97b109",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056731995,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Notice that it's almost as simple as our second example. Instead of setting "
            ],
            [
              "cmd.Stdout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and "
            ],
            [
              "cmd.Stderr",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to standard output, we set them to a single in-memory buffer."
            ]
          ]
        },
        "type": "text",
        "version": 490,
        "inline_content": [
          {
            "Text": "Notice that it's almost as simple as our second example. Instead of setting "
          },
          {
            "Text": "cmd.Stdout",
            "AttrFlags": 2
          },
          {
            "Text": " and "
          },
          {
            "Text": "cmd.Stderr",
            "AttrFlags": 2
          },
          {
            "Text": " to standard output, we set them to a single in-memory buffer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056680968,
        "id": "40d2d275-6ff8-414c-98d4-83d15fe52870",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056759323,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "When program finishes, we returned everything written to that buffer."
            ]
          ]
        },
        "type": "text",
        "version": 163,
        "inline_content": [
          {
            "Text": "When program finishes, we returned everything written to that buffer."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548056759913,
        "id": "9aea3f3c-a004-4afd-9816-5c63ad20c172",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548056874242,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Don't be afraid to peruse the code of standard library."
            ]
          ]
        },
        "type": "text",
        "version": 296,
        "inline_content": [
          {
            "Text": "Don't be afraid to peruse the code of standard library."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "ca6597d7-e802-4d4e-9522-0e6197de19c9",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787033,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture stdout and stderr separately"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture stdout and stderr separately"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "8b4e28cb-cedb-4feb-a50f-34e72dcb0a6b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787033,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What if you want to do the same but capture stdout and stderr separately?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What if you want to do the same but capture stdout and stderr separately?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787033,
        "id": "18821237-1276-43c2-8ae5-83adc78cadbd",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889014114,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    var stdout, stderr bytes.Buffer\n    cmd.Stdout = \u0026stdout\n    cmd.Stderr = \u0026stderr\n    err := cmd.Run()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"out:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n    var stdout, stderr bytes.Buffer\n    cmd.Stdout = \u0026stdout\n    cmd.Stderr = \u0026stderr\n    err := cmd.Run()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"out:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787034,
        "id": "4bff7ef7-8685-4cfc-bd76-df674abeecce",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787034,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/02-capture-stdout-stderr.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/02-capture-stdout-stderr.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/02-capture-stdout-stderr.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/02-capture-stdout-stderr.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787034,
        "id": "5c2d3535-7e9a-47f4-9c00-9188f8e1d500",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787034,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture output but also show progress"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture output but also show progress"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787034,
        "id": "0990f2db-dcb6-4990-91c8-3d4616371c8f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787034,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "What if the command takes a long time to finish?"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "What if the command takes a long time to finish?"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787035,
        "id": "49b26db8-4cfc-4b91-81d4-982e2d145581",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787035,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It would be nice to see its progress on the console as it happens in addition to capturing stdout/stderr."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It would be nice to see its progress on the console as it happens in addition to capturing stdout/stderr."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787035,
        "id": "c2f0b8fa-a241-4701-be71-59c4a01fd702",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548054384853,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s a little bit more involved, but not terribly so."
            ]
          ]
        },
        "type": "text",
        "version": 5,
        "inline_content": [
          {
            "Text": "It’s a little bit more involved, but not terribly so."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548054391474,
        "id": "4a028f74-18be-4716-aa86-b355439d4c00",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057036091,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "First, a helper function that copies from reader to a writer and also captures copied data:"
            ]
          ]
        },
        "type": "text",
        "version": 223,
        "inline_content": [
          {
            "Text": "First, a helper function that copies from reader to a writer and also captures copied data:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548054482967,
        "id": "04fbbb6c-8627-42ce-a72f-8a4a00f870cf",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057081435,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func copyAndCapture(w io.Writer, r io.Reader) ([]byte, error) {\n    var out []byte\n    buf := make([]byte, 1024, 1024)\n    for {\n        n, err := r.Read(buf[:])\n        if n \u003e 0 {\n            d := buf[:n]\n            out = append(out, d...)\n            _, err := w.Write(d)\n            if err != nil {\n                return out, err\n            }\n        }\n        if err != nil {\n            // Read returns io.EOF at the end of file, which is not an error for us\n            if err == io.EOF {\n                err = nil\n            }\n            return out, err\n        }\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 16,
        "code": "func copyAndCapture(w io.Writer, r io.Reader) ([]byte, error) {\n    var out []byte\n    buf := make([]byte, 1024, 1024)\n    for {\n        n, err := r.Read(buf[:])\n        if n \u003e 0 {\n            d := buf[:n]\n            out = append(out, d...)\n            _, err := w.Write(d)\n            if err != nil {\n                return out, err\n            }\n        }\n        if err != nil {\n            // Read returns io.EOF at the end of file, which is not an error for us\n            if err == io.EOF {\n                err = nil\n            }\n            return out, err\n        }\n    }\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548054508244,
        "id": "7a2014a2-c7df-483f-9297-8111a3fc2307",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057256280,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Handling errors from "
            ],
            [
              "Read",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is subtle. An error "
            ],
            [
              "io.EOF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " means that we've read everything. It's not an actual error so we turn "
            ],
            [
              "io.EOF",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " into "
            ],
            [
              "nil",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 515,
        "inline_content": [
          {
            "Text": "Handling errors from "
          },
          {
            "Text": "Read",
            "AttrFlags": 2
          },
          {
            "Text": " is subtle. An error "
          },
          {
            "Text": "io.EOF",
            "AttrFlags": 2
          },
          {
            "Text": " means that we've read everything. It's not an actual error so we turn "
          },
          {
            "Text": "io.EOF",
            "AttrFlags": 2
          },
          {
            "Text": " into "
          },
          {
            "Text": "nil",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548057090539,
        "id": "0074cd53-4dba-4453-b478-6f37f9ef3cdb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057090539,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "type": "text",
        "version": 5
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548054299434,
        "id": "815368c2-5e03-41d3-8e4e-a772782f3af8",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548054518607,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "The meat of the code:"
            ]
          ]
        },
        "type": "text",
        "version": 55,
        "inline_content": [
          {
            "Text": "The meat of the code:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787035,
        "id": "05cf719b-ad39-4c31-bfa1-d5c13e397f39",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548054564952,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func main() {\n  cmd := exec.Command(\"ls\", \"-lah\")\n\n\tvar stdout, stderr []byte\n\tvar errStdout, errStderr error\n\tstdoutIn, _ := cmd.StdoutPipe()\n\tstderrIn, _ := cmd.StderrPipe()\n\terr := cmd.Start()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n\t}\n\n\t// cmd.Wait() should be called only after we finish reading\n\t// from stdoutIn and stderrIn.\n\t// wg ensures that we finish\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\tgo func() {\n\t\tstdout, errStdout = copyAndCapture(os.Stdout, stdoutIn)\n\t\twg.Done()\n\t}()\n\n\tstderr, errStderr = copyAndCapture(os.Stderr, stderrIn)\n\n\twg.Wait()\n\n\terr = cmd.Wait()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n\t}\n\tif errStdout != nil || errStderr != nil {\n\t\tlog.Fatal(\"failed to capture stdout or stderr\\n\")\n\t}\n\toutStr, errStr := string(stdout), string(stderr)\n\tfmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 20,
        "code": "func main() {\n  cmd := exec.Command(\"ls\", \"-lah\")\n\n\tvar stdout, stderr []byte\n\tvar errStdout, errStderr error\n\tstdoutIn, _ := cmd.StdoutPipe()\n\tstderrIn, _ := cmd.StderrPipe()\n\terr := cmd.Start()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n\t}\n\n\t// cmd.Wait() should be called only after we finish reading\n\t// from stdoutIn and stderrIn.\n\t// wg ensures that we finish\n\tvar wg sync.WaitGroup\n\twg.Add(1)\n\tgo func() {\n\t\tstdout, errStdout = copyAndCapture(os.Stdout, stdoutIn)\n\t\twg.Done()\n\t}()\n\n\tstderr, errStderr = copyAndCapture(os.Stderr, stderrIn)\n\n\twg.Wait()\n\n\terr = cmd.Wait()\n\tif err != nil {\n\t\tlog.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n\t}\n\tif errStdout != nil || errStderr != nil {\n\t\tlog.Fatal(\"failed to capture stdout or stderr\\n\")\n\t}\n\toutStr, errStr := string(stdout), string(stderr)\n\tfmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "0df25a72-ea93-4ce3-8d0f-8ecd5272b78b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057655324,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/03-live-progress-and-capture-v1.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v1.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 27,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/03-live-progress-and-capture-v1.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v1.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548057390300,
        "id": "30ae5908-09f6-437c-a915-531055dae7cc",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057487059,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We have two outputs to copy. To avoid serializing them, we'll read one in a goroutine."
            ]
          ]
        },
        "type": "text",
        "version": 229,
        "inline_content": [
          {
            "Text": "We have two outputs to copy. To avoid serializing them, we'll read one in a goroutine."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548054606265,
        "id": "32690c31-5bbb-4c2c-a0c2-ff670ab5ee2b",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057533808,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "As documentation of "
            ],
            [
              "StdoutPipe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " warns, "
            ],
            [
              "Wait",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " will close the pipes when the process finishes. This might lead to losing some output if we haven't finished reading it."
            ]
          ]
        },
        "type": "text",
        "version": 649,
        "inline_content": [
          {
            "Text": "As documentation of "
          },
          {
            "Text": "StdoutPipe",
            "AttrFlags": 2
          },
          {
            "Text": " warns, "
          },
          {
            "Text": "Wait",
            "AttrFlags": 2
          },
          {
            "Text": " will close the pipes when the process finishes. This might lead to losing some output if we haven't finished reading it."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548057534489,
        "id": "bd703bea-1bda-47d1-9d49-e15e97345b1c",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057610456,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To prevent that we use "
            ],
            [
              "sync.WaitGroup",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to ensure that the gorutine handling "
            ],
            [
              "os.Stdout",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " finishes reading before we call "
            ],
            [
              "cmd.Wait",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 471,
        "inline_content": [
          {
            "Text": "To prevent that we use "
          },
          {
            "Text": "sync.WaitGroup",
            "AttrFlags": 2
          },
          {
            "Text": " to ensure that the gorutine handling "
          },
          {
            "Text": "os.Stdout",
            "AttrFlags": 2
          },
          {
            "Text": " finishes reading before we call "
          },
          {
            "Text": "cmd.Wait",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548057643425,
        "id": "424248bf-68cb-4818-b908-73ace72eb0c2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057758238,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "I encourage you to read the implementation of "
            ],
            [
              "cmd.StdoutPipe",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". You'll be surprised by how short it is."
            ]
          ]
        },
        "type": "text",
        "version": 444,
        "inline_content": [
          {
            "Text": "I encourage you to read the implementation of "
          },
          {
            "Text": "cmd.StdoutPipe",
            "AttrFlags": 2
          },
          {
            "Text": ". You'll be surprised by how short it is."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "009fb3c0-9bcf-4b51-ab0e-5a459d5c4fbb",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787036,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture output but also show progress #2"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture output but also show progress #2"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "901f5f2a-7bb4-49ff-9197-1b1b5c0728a5",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787036,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Previous solution works but "
            ],
            [
              "copyAndCapture",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " looks like we’re re-implementing "
            ],
            [
              "io.Copy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Thanks to Go’s use of interfaces we can re-use "
            ],
            [
              "io.Copy",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Previous solution works but "
          },
          {
            "Text": "copyAndCapture",
            "AttrFlags": 2
          },
          {
            "Text": " looks like we’re re-implementing "
          },
          {
            "Text": "io.Copy",
            "AttrFlags": 2
          },
          {
            "Text": ". Thanks to Go’s use of interfaces we can re-use "
          },
          {
            "Text": "io.Copy",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "478b1717-c394-4a0d-8800-da0bdb075f56",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787036,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We’ll write "
            ],
            [
              "CapturingPassThroughWriter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " struct implementing "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " interface. It’ll capture everything that’s written to it and also write it to underlying "
            ],
            [
              "io.Writer",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We’ll write "
          },
          {
            "Text": "CapturingPassThroughWriter",
            "AttrFlags": 2
          },
          {
            "Text": " struct implementing "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": " interface. It’ll capture everything that’s written to it and also write it to underlying "
          },
          {
            "Text": "io.Writer",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787036,
        "id": "3d1d8976-3059-43b3-8cf1-2b0beafb8a46",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057889753,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// CapturingPassThroughWriter is a writer that remembers\n// data written to it and passes it to w\ntype CapturingPassThroughWriter struct {\n    buf bytes.Buffer\n    w io.Writer\n}\n\n// NewCapturingPassThroughWriter creates new CapturingPassThroughWriter\nfunc NewCapturingPassThroughWriter(w io.Writer) *CapturingPassThroughWriter {\n    return \u0026CapturingPassThroughWriter{\n        w: w,\n    }\n}\n\nfunc (w *CapturingPassThroughWriter) Write(d []byte) (int, error) {\n    w.buf.Write(d)\n    return w.w.Write(d)\n}\n\n// Bytes returns bytes written to the writer\nfunc (w *CapturingPassThroughWriter) Bytes() []byte {\n    return w.buf.Bytes()\n}\n\nfunc main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n\n\t\tvar errStdout, errStderr error\n\t\tstdoutIn, _ := cmd.StdoutPipe()\n\t\tstderrIn, _ := cmd.StderrPipe()\n\t\tstdout := NewCapturingPassThroughWriter(os.Stdout)\n\t\tstderr := NewCapturingPassThroughWriter(os.Stderr)\n\t\terr := cmd.Start()\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n\t\t}\n\t\n\t\tvar wg sync.WaitGroup\n\t\twg.Add(1)\n\t\n\t\tgo func() {\n\t\t\t_, errStdout = io.Copy(stdout, stdoutIn)\n\t\t\twg.Done()\n\t\t}()\n\t\n\t\t_, errStderr = io.Copy(stderr, stderrIn)\n\t\twg.Wait()\n\t\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatalf(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 19,
        "code": "// CapturingPassThroughWriter is a writer that remembers\n// data written to it and passes it to w\ntype CapturingPassThroughWriter struct {\n    buf bytes.Buffer\n    w io.Writer\n}\n\n// NewCapturingPassThroughWriter creates new CapturingPassThroughWriter\nfunc NewCapturingPassThroughWriter(w io.Writer) *CapturingPassThroughWriter {\n    return \u0026CapturingPassThroughWriter{\n        w: w,\n    }\n}\n\nfunc (w *CapturingPassThroughWriter) Write(d []byte) (int, error) {\n    w.buf.Write(d)\n    return w.w.Write(d)\n}\n\n// Bytes returns bytes written to the writer\nfunc (w *CapturingPassThroughWriter) Bytes() []byte {\n    return w.buf.Bytes()\n}\n\nfunc main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n\n\t\tvar errStdout, errStderr error\n\t\tstdoutIn, _ := cmd.StdoutPipe()\n\t\tstderrIn, _ := cmd.StderrPipe()\n\t\tstdout := NewCapturingPassThroughWriter(os.Stdout)\n\t\tstderr := NewCapturingPassThroughWriter(os.Stderr)\n\t\terr := cmd.Start()\n\t\tif err != nil {\n\t\t\tlog.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n\t\t}\n\t\n\t\tvar wg sync.WaitGroup\n\t\twg.Add(1)\n\t\n\t\tgo func() {\n\t\t\t_, errStdout = io.Copy(stdout, stdoutIn)\n\t\t\twg.Done()\n\t\t}()\n\t\n\t\t_, errStderr = io.Copy(stderr, stderrIn)\n\t\twg.Wait()\n\t\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatalf(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdout.Bytes()), string(stderr.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787037,
        "id": "6ad283ca-7aa8-4946-9f16-3d539fa4d7f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787037,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/03-live-progress-and-capture-v2.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v2.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/03-live-progress-and-capture-v2.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v2.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787037,
        "id": "9e022514-5381-40b1-8266-6dee52beb6e4",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787037,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Capture output but also show progress #3"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Capture output but also show progress #3"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787039,
        "id": "1d034284-e1de-4b45-bb53-a1a296009351",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057937702,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Turns out Go’s standard library implements "
            ],
            [
              "io.MultiWriter",
              [
                [
                  "a",
                  "https://golang.org/pkg/io/#MultiWriter"
                ]
              ]
            ],
            [
              ", which is a more generic version of "
            ],
            [
              "CapturingPassThroughWriter",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". Let’s use that instead:"
            ]
          ]
        },
        "type": "text",
        "version": 5,
        "inline_content": [
          {
            "Text": "Turns out Go’s standard library implements "
          },
          {
            "Text": "io.MultiWriter",
            "Link": "https://golang.org/pkg/io/#MultiWriter"
          },
          {
            "Text": ", which is a more generic version of "
          },
          {
            "Text": "CapturingPassThroughWriter",
            "AttrFlags": 2
          },
          {
            "Text": ". Let’s use that instead:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787039,
        "id": "c84705cc-162f-4379-a8ae-21b747535043",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548057967840,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n\n\t\tvar stdoutBuf, stderrBuf bytes.Buffer\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n\n    var errStdout, errStderr error\n    stdout := io.MultiWriter(os.Stdout, \u0026stdoutBuf)\n    stderr := io.MultiWriter(os.Stderr, \u0026stderrBuf)\n    err := cmd.Start()\n    if err != nil {\n        log.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n    }\n\n\t\tvar wg sync.WaitGroup\n\t\twg.Add(1)\n\t\n\t\tgo func() {\n\t\t\t_, errStdout = io.Copy(stdout, stdoutIn)\n\t\t\twg.Done()\n\t\t}()\n\t\n\t\t_, errStderr = io.Copy(stderr, stderrIn)\n\t\twg.Wait()\n\t\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatal(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdoutBuf.Bytes()), string(stderrBuf.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n\n}"
            ]
          ]
        },
        "type": "code",
        "version": 22,
        "code": "func main() {\n    cmd := exec.Command(\"ls\", \"-lah\")\n\n\t\tvar stdoutBuf, stderrBuf bytes.Buffer\n    stdoutIn, _ := cmd.StdoutPipe()\n    stderrIn, _ := cmd.StderrPipe()\n\n    var errStdout, errStderr error\n    stdout := io.MultiWriter(os.Stdout, \u0026stdoutBuf)\n    stderr := io.MultiWriter(os.Stderr, \u0026stderrBuf)\n    err := cmd.Start()\n    if err != nil {\n        log.Fatalf(\"cmd.Start() failed with '%s'\\n\", err)\n    }\n\n\t\tvar wg sync.WaitGroup\n\t\twg.Add(1)\n\t\n\t\tgo func() {\n\t\t\t_, errStdout = io.Copy(stdout, stdoutIn)\n\t\t\twg.Done()\n\t\t}()\n\t\n\t\t_, errStderr = io.Copy(stderr, stderrIn)\n\t\twg.Wait()\n\t\n    err = cmd.Wait()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    if errStdout != nil || errStderr != nil {\n        log.Fatal(\"failed to capture stdout or stderr\\n\")\n    }\n    outStr, errStr := string(stdoutBuf.Bytes()), string(stderrBuf.Bytes())\n    fmt.Printf(\"\\nout:\\n%s\\nerr:\\n%s\\n\", outStr, errStr)\n\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "fb00d227-c213-42e5-ae62-b1ecffb73474",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/03-live-progress-and-capture-v3.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v3.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/03-live-progress-and-capture-v3.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/03-live-progress-and-capture-v3.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "a240e550-3121-4174-a906-3f65fae2b893",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s good to be able to write the code ourselves, but it’s even better to know standard library well!"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It’s good to be able to write the code ourselves, but it’s even better to know standard library well!"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "1371cb02-dbb9-41ea-a924-21602fd4bc32",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Writing to program’s stdin"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Writing to program’s stdin"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "9b018102-234d-4afa-8e42-b6d686743a5a",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We know how to read program’s stdout but we can also write to its stdin."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We know how to read program’s stdout but we can also write to its stdin."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787040,
        "id": "b953c2a9-cdca-4c5a-b39b-39581e875977",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787040,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "There is no Go library to do bzip2 compression (only decompression is available in standard library)."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "There is no Go library to do bzip2 compression (only decompression is available in standard library)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "9b1c6406-4fc2-4548-b5fe-e597005a1bae",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can use "
            ],
            [
              "bzip2",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to do the compression by: * writing the data to a temporary file * call "
            ],
            [
              "bzip2 -c ${file_in}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " and capture its stdout"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can use "
          },
          {
            "Text": "bzip2",
            "AttrFlags": 2
          },
          {
            "Text": " to do the compression by: * writing the data to a temporary file * call "
          },
          {
            "Text": "bzip2 -c ${file_in}",
            "AttrFlags": 2
          },
          {
            "Text": " and capture its stdout"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "c6b596cd-7b85-4c51-b12f-620e3e14a323",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It would be even better if we didn’t have to create a temporary file."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "It would be even better if we didn’t have to create a temporary file."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "46d64ccd-26f4-4674-a2cd-c18120475ce2",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Most compression programs accept data to compress/decompress on stdin."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Most compression programs accept data to compress/decompress on stdin."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "a6edeaf3-c247-44c6-a26c-dcf73d50f0f1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "To do that on command-line we would use the following command: "
            ],
            [
              "bzip2 -c \u003c${file_in} \u003e${file_out}",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "To do that on command-line we would use the following command: "
          },
          {
            "Text": "bzip2 -c \u003c${file_in} \u003e${file_out}",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "89e8e4d2-2982-43b5-9d4c-ec60ae8cc94b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787041,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Here’s the same thing in Go:"
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Here’s the same thing in Go:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787041,
        "id": "e7c194ab-12ac-4f6a-a1ec-e66bef8bb572",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889031078,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// compress data using bzip2 without creating temporary files\nfunc bzipCompress(d []byte) ([]byte, error) {\n    var out bytes.Buffer\n    // -c : compress\n    // -9 : select the highest level of compresion\n    cmd := exec.Command(\"bzip2\", \"-c\", \"-9\")\n    cmd.Stdin = bytes.NewBuffer(d)\n    cmd.Stdout = \u0026out\n    err := cmd.Run()\n    if err != nil {\n        return nil, err\n    }\n    return out.Bytes(), nil\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "// compress data using bzip2 without creating temporary files\nfunc bzipCompress(d []byte) ([]byte, error) {\n    var out bytes.Buffer\n    // -c : compress\n    // -9 : select the highest level of compresion\n    cmd := exec.Command(\"bzip2\", \"-c\", \"-9\")\n    cmd.Stdin = bytes.NewBuffer(d)\n    cmd.Stdout = \u0026out\n    err := cmd.Run()\n    if err != nil {\n        return nil, err\n    }\n    return out.Bytes(), nil\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787042,
        "id": "e2d047c6-0690-44a3-bd69-437eebcfcc13",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787042,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/06-feed-stdin.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/06-feed-stdin.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/06-feed-stdin.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/06-feed-stdin.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787042,
        "id": "7a67b357-56d6-4229-adfa-b0556ab71118",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787042,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "We can also call "
            ],
            [
              "cmd.StdinPipe()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", which returns "
            ],
            [
              "io.WriteCloser",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". It’s more complicated but gives more control over writing."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "We can also call "
          },
          {
            "Text": "cmd.StdinPipe()",
            "AttrFlags": 2
          },
          {
            "Text": ", which returns "
          },
          {
            "Text": "io.WriteCloser",
            "AttrFlags": 2
          },
          {
            "Text": ". It’s more complicated but gives more control over writing."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "65d3adb0-6112-47bd-8da6-5599f412382c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787043,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Changing environment of executed program"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Changing environment of executed program"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "d04ce5f2-15bb-4c86-8ed0-62dda0c3b87e",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058051141,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Things to know about environment variables in Go:"
            ]
          ]
        },
        "type": "text",
        "version": 7,
        "inline_content": [
          {
            "Text": "Things to know about environment variables in Go:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548058051141,
        "id": "38885ea9-f21a-4ea1-9bb0-a6bbbb06662f",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058053724,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "os.Environ()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns "
            ],
            [
              "[]string",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " where each string is in form of "
            ],
            [
              "FOO=bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ", where "
            ],
            [
              "FOO",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the name of environment variable and "
            ],
            [
              "bar",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is the value "
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 14,
        "inline_content": [
          {
            "Text": "os.Environ()",
            "AttrFlags": 2
          },
          {
            "Text": " returns "
          },
          {
            "Text": "[]string",
            "AttrFlags": 2
          },
          {
            "Text": " where each string is in form of "
          },
          {
            "Text": "FOO=bar",
            "AttrFlags": 2
          },
          {
            "Text": ", where "
          },
          {
            "Text": "FOO",
            "AttrFlags": 2
          },
          {
            "Text": " is the name of environment variable and "
          },
          {
            "Text": "bar",
            "AttrFlags": 2
          },
          {
            "Text": " is the value "
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548058041854,
        "id": "ca8d9369-b9f8-40b0-a76f-32c9276d50a0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058070423,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              " "
            ],
            [
              "os.Getenv(\"FOO\")",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " returns the value of environment variable "
            ],
            [
              "FOO",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "bulleted_list",
        "version": 30,
        "inline_content": [
          {
            "Text": " "
          },
          {
            "Text": "os.Getenv(\"FOO\")",
            "AttrFlags": 2
          },
          {
            "Text": " returns the value of environment variable "
          },
          {
            "Text": "FOO",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "28a50d22-1b58-4223-becf-be424dfd4b1b",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787043,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Sometimes you need to modify the environment of the executed program."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Sometimes you need to modify the environment of the executed program."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548058348137,
        "id": "215567c4-17bb-4520-affc-3e88712363be",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058369666,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Go supports that by setting "
            ],
            [
              "Env",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " member of "
            ],
            [
              "exec.Cmd",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ],
            [
              "cmd.Env",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " has the same format as "
            ],
            [
              "os.Environ()",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              ". "
            ]
          ]
        },
        "type": "text",
        "version": 28,
        "inline_content": [
          {
            "Text": "Go supports that by setting "
          },
          {
            "Text": "Env",
            "AttrFlags": 2
          },
          {
            "Text": " member of "
          },
          {
            "Text": "exec.Cmd",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          },
          {
            "Text": "cmd.Env",
            "AttrFlags": 2
          },
          {
            "Text": " has the same format as "
          },
          {
            "Text": "os.Environ()",
            "AttrFlags": 2
          },
          {
            "Text": ". "
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548058400972,
        "id": "b911bcd7-86c1-4bde-bb18-91502cee11cd",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058420858,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "Env",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " is not set, the process inherits environment of the calling process."
            ]
          ]
        },
        "type": "text",
        "version": 195,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "Env",
            "AttrFlags": 2
          },
          {
            "Text": " is not set, the process inherits environment of the calling process."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548058118463,
        "id": "4747af45-5ec3-415f-8008-66d83cfd99b0",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058454609,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Usually, you don’t want to construct a completely new environment from scratch but pass a modified version of an environment of the current process. Here's how to add a new variable:"
            ]
          ]
        },
        "type": "text",
        "version": 369,
        "inline_content": [
          {
            "Text": "Usually, you don’t want to construct a completely new environment from scratch but pass a modified version of an environment of the current process. Here's how to add a new variable:"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787043,
        "id": "49640c88-34a7-4e6b-ac22-d23fe1199b01",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058156303,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "\t\tcmd := exec.Command(\"programToExecute\")\n\n    additionalEnv := \"FOO=bar\"\n    newEnv := append(os.Environ(), additionalEnv))\n    cmd.Env = newEnv\n\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"%s\", out)"
            ]
          ]
        },
        "type": "code",
        "version": 11,
        "code": "\t\tcmd := exec.Command(\"programToExecute\")\n\n    additionalEnv := \"FOO=bar\"\n    newEnv := append(os.Environ(), additionalEnv))\n    cmd.Env = newEnv\n\n    out, err := cmd.CombinedOutput()\n    if err != nil {\n        log.Fatalf(\"cmd.Run() failed with %s\\n\", err)\n    }\n    fmt.Printf(\"%s\", out)",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787044,
        "id": "91aaf832-8a5e-46e8-a848-7711322128bf",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787044,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/05-change-environment.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/05-change-environment.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/05-change-environment.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/05-change-environment.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1548058195774,
        "id": "be5c0016-56b2-4da2-8724-d216692e9886",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058511088,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Things get more complicated if you want to delete an environment or to ensure you're not setting the same variable twice. Package "
            ],
            [
              "shurcooL/go/osutil",
              [
                [
                  "a",
                  "https://godoc.org/github.com/shurcooL/go/osutil#Environ"
                ]
              ]
            ],
            [
              "  offers an easier way of manipulating environment variables."
            ]
          ]
        },
        "type": "text",
        "version": 373,
        "inline_content": [
          {
            "Text": "Things get more complicated if you want to delete an environment or to ensure you're not setting the same variable twice. Package "
          },
          {
            "Text": "shurcooL/go/osutil",
            "Link": "https://godoc.org/github.com/shurcooL/go/osutil#Environ"
          },
          {
            "Text": "  offers an easier way of manipulating environment variables."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787045,
        "id": "2ebc0f3d-a88e-40f0-84de-6c993e903ff1",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787045,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Check early that a program is installed"
            ]
          ]
        },
        "type": "sub_header",
        "version": 1,
        "inline_content": [
          {
            "Text": "Check early that a program is installed"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787045,
        "id": "1035bcf7-6b37-441f-b62c-592857beb23f",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058620128,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Imagine you wrote a program that takes a long time to run. At the end, you call executable "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " to perform an essential task."
            ]
          ]
        },
        "type": "text",
        "version": 74,
        "inline_content": [
          {
            "Text": "Imagine you wrote a program that takes a long time to run. At the end, you call executable "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " to perform an essential task."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787045,
        "id": "33cd90f1-cfec-4d49-b708-d7060fdddf9c",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787045,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "If "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " executable is not present, the call will fail."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "If "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " executable is not present, the call will fail."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787046,
        "id": "72ae64d7-0e49-44dc-8f13-65620bf34cec",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058682834,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "It’s a good idea to detect lack of executable "
            ],
            [
              "foo",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " at the beginning and fail early with descriptive error message."
            ]
          ]
        },
        "type": "text",
        "version": 72,
        "inline_content": [
          {
            "Text": "It’s a good idea to detect lack of executable "
          },
          {
            "Text": "foo",
            "AttrFlags": 2
          },
          {
            "Text": " at the beginning and fail early with descriptive error message."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787046,
        "id": "27a1a6ad-dbcd-4738-a927-6caa9a28361d",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787046,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "You can do it using "
            ],
            [
              "exec.LookPath",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "You can do it using "
          },
          {
            "Text": "exec.LookPath",
            "AttrFlags": 2
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787046,
        "id": "84b62d1c-b119-4a37-b727-c408e9760398",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531889037361,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func checkLsExists() {\n    path, err := exec.LookPath(\"ls\")\n    if err != nil {\n        fmt.Printf(\"didn't find 'ls' executable\\n\")\n    } else {\n        fmt.Printf(\"'ls' executable is in '%s'\\n\", path)\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 3,
        "code": "func checkLsExists() {\n    path, err := exec.LookPath(\"ls\")\n    if err != nil {\n        fmt.Printf(\"didn't find 'ls' executable\\n\")\n    } else {\n        fmt.Printf(\"'ls' executable is in '%s'\\n\", path)\n    }\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787047,
        "id": "d67aaa93-a374-4ab4-8efd-2f03c352d071",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531888787047,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Full example: "
            ],
            [
              "advanced-exec/04-check-exe-exists.go",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/04-check-exe-exists.go"
                ]
              ]
            ],
            [
              "."
            ]
          ]
        },
        "type": "text",
        "version": 1,
        "inline_content": [
          {
            "Text": "Full example: "
          },
          {
            "Text": "advanced-exec/04-check-exe-exists.go",
            "Link": "https://github.com/kjk/go-cookbook/blob/master/advanced-exec/04-check-exe-exists.go"
          },
          {
            "Text": "."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787047,
        "id": "d80b3225-046c-4c85-a480-4990e25288de",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1548058787108,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Another way to check if a program exists is to try to execute it in a no-op mode (e.g. many programs support "
            ],
            [
              "--help",
              [
                [
                  "c"
                ]
              ]
            ],
            [
              " option)."
            ]
          ]
        },
        "type": "text",
        "version": 353,
        "inline_content": [
          {
            "Text": "Another way to check if a program exists is to try to execute it in a no-op mode (e.g. many programs support "
          },
          {
            "Text": "--help",
            "AttrFlags": 2
          },
          {
            "Text": " option)."
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1531888787047,
        "id": "32bece2b-8c41-402c-9ea0-902ba88f23e3",
        "ignore_block_count": true,
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1531901400330,
        "parent_id": "8ede890d-08ce-444f-a52d-105ddea4d3e4",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Code for this chapter: "
            ],
            [
              "https://github.com/kjk/go-cookbook/tree/master/advanced-exec",
              [
                [
                  "a",
                  "https://github.com/kjk/go-cookbook/tree/master/advanced-exec"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 7,
        "inline_content": [
          {
            "Text": "Code for this chapter: "
          },
          {
            "Text": "https://github.com/kjk/go-cookbook/tree/master/advanced-exec",
            "Link": "https://github.com/kjk/go-cookbook/tree/master/advanced-exec"
          }
        ]
      }
    ],
    "title": "Advanced command execution in Go with os/exec",
    "format_page": {
      "page_cover": "https://s3-us-west-2.amazonaws.com/secure.notion-static.com/bd740d50-d936-4bcf-92b9-f7bf0211cc57/header-02.jpg",
      "page_cover_position": 0.5,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true,
      "page_cover_url": "https://www.notion.so/image/https:%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbd740d50-d936-4bcf-92b9-f7bf0211cc57%2Fheader-02.jpg"
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 18
    }
  ],
  "Tables": null
}