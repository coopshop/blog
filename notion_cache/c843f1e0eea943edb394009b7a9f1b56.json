{
  "ID": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
  "Root": {
    "alive": true,
    "content": [
      "4730a509-4fc9-4282-a7b4-a87bccd20c1e",
      "97b14779-764a-48ea-bdb2-cbe286951501",
      "e87d8255-ed5f-4aa1-920b-22f40ae0c382",
      "1e84213a-b725-4b19-9999-f0403b149d84",
      "6fb7aad4-876a-46d5-9b29-233c0a6f4320",
      "d4e5355a-83e4-41cf-b78c-bcb45d3ee8ec"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1501802798124,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1520966080593,
    "parent_id": "66c160f5-e60e-4aa2-8683-c9dce71188bc",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "clang"
        ]
      ]
    },
    "type": "page",
    "version": 2,
    "content_resolved": [
      {
        "alive": true,
        "content": [
          "566d32cc-c5c3-4d16-81af-1ea8dc9d3021",
          "e8f00f23-18c1-45c6-9bfb-752bdbf0399d",
          "b20bdf15-036b-4535-8d71-f63e9c1f2d17"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1509228300684,
        "id": "4730a509-4fc9-4282-a7b4-a87bccd20c1e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1509228300684,
        "parent_id": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "cmd-line options"
            ]
          ]
        },
        "type": "toggle",
        "version": 0,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1509229969353,
            "id": "566d32cc-c5c3-4d16-81af-1ea8dc9d3021",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1509229969353,
            "parent_id": "4730a509-4fc9-4282-a7b4-a87bccd20c1e",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "Reference: "
                ],
                [
                  "https://clang.llvm.org/docs/ClangCommandLineReference.html",
                  [
                    [
                      "a",
                      "https://clang.llvm.org/docs/ClangCommandLineReference.html"
                    ]
                  ]
                ]
              ]
            },
            "type": "text",
            "version": 0,
            "inline_content": [
              {
                "Text": "Reference: "
              },
              {
                "Text": "https://clang.llvm.org/docs/ClangCommandLineReference.html",
                "Link": "https://clang.llvm.org/docs/ClangCommandLineReference.html"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1509228310017,
            "id": "e8f00f23-18c1-45c6-9bfb-752bdbf0399d",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1509228310017,
            "parent_id": "4730a509-4fc9-4282-a7b4-a87bccd20c1e",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "-std=",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " : "
                ],
                [
                  "c++98",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ", "
                ],
                [
                  " c++11",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  ", "
                ],
                [
                  "c++14",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  "  , "
                ],
                [
                  "c++1z",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " "
                ]
              ]
            },
            "type": "text",
            "version": 0,
            "inline_content": [
              {
                "Text": "-std=",
                "AttrFlags": 2
              },
              {
                "Text": " : "
              },
              {
                "Text": "c++98",
                "AttrFlags": 2
              },
              {
                "Text": ", "
              },
              {
                "Text": " c++11",
                "AttrFlags": 2
              },
              {
                "Text": ", "
              },
              {
                "Text": "c++14",
                "AttrFlags": 2
              },
              {
                "Text": "  , "
              },
              {
                "Text": "c++1z",
                "AttrFlags": 2
              },
              {
                "Text": " "
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1509229603283,
            "id": "b20bdf15-036b-4535-8d71-f63e9c1f2d17",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1509229603283,
            "parent_id": "4730a509-4fc9-4282-a7b4-a87bccd20c1e",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "-stdlib=",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " : "
                ],
                [
                  "libc++",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " (preferable on Mac OS X), "
                ],
                [
                  "libstdc++",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  "  (preferable on Linux). "
                ],
                [
                  "https://stackoverflow.com/questions/14972425/should-i-use-libc-or-libstdc",
                  [
                    [
                      "a",
                      "https://stackoverflow.com/questions/14972425/should-i-use-libc-or-libstdc"
                    ]
                  ]
                ]
              ]
            },
            "type": "text",
            "version": 0,
            "inline_content": [
              {
                "Text": "-stdlib=",
                "AttrFlags": 2
              },
              {
                "Text": " : "
              },
              {
                "Text": "libc++",
                "AttrFlags": 2
              },
              {
                "Text": " (preferable on Mac OS X), "
              },
              {
                "Text": "libstdc++",
                "AttrFlags": 2
              },
              {
                "Text": "  (preferable on Linux). "
              },
              {
                "Text": "https://stackoverflow.com/questions/14972425/should-i-use-libc-or-libstdc",
                "Link": "https://stackoverflow.com/questions/14972425/should-i-use-libc-or-libstdc"
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "cmd-line options"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "ccea5e4d-fe43-4557-ab9b-01b17561200f",
          "a2276f2d-e7b6-41f6-89dc-9bd7fc1ee07e"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1509943274243,
        "id": "97b14779-764a-48ea-bdb2-cbe286951501",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1509943274243,
        "parent_id": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "sanitizers"
            ]
          ]
        },
        "type": "toggle",
        "version": 0,
        "content_resolved": [
          {
            "alive": true,
            "content": [
              "07d02c8e-52e8-485d-8d18-3d4845320be0",
              "5e5905ea-4635-4e13-829d-d2439f815bb0",
              "c864d415-6ff8-497d-96b5-4110587382bf",
              "5bf6a265-b2ae-4655-9faf-11676788116c",
              "c66bd230-210f-47b1-ac55-55fdc7a21367"
            ],
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1509943285904,
            "id": "ccea5e4d-fe43-4557-ab9b-01b17561200f",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1509943285904,
            "parent_id": "97b14779-764a-48ea-bdb2-cbe286951501",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "address sanitizer (memory corruptions), 2x slowdown"
                ]
              ]
            },
            "type": "toggle",
            "version": 0,
            "content_resolved": [
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509943278993,
                "id": "07d02c8e-52e8-485d-8d18-3d4845320be0",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509943278993,
                "parent_id": "ccea5e4d-fe43-4557-ab9b-01b17561200f",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "https://clang.llvm.org/docs/AddressSanitizer.html",
                      [
                        [
                          "a",
                          "https://clang.llvm.org/docs/AddressSanitizer.html"
                        ]
                      ]
                    ]
                  ]
                },
                "type": "text",
                "version": 0,
                "inline_content": [
                  {
                    "Text": "https://clang.llvm.org/docs/AddressSanitizer.html",
                    "Link": "https://clang.llvm.org/docs/AddressSanitizer.html"
                  }
                ]
              },
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509943296703,
                "id": "5e5905ea-4635-4e13-829d-d2439f815bb0",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509943296703,
                "parent_id": "ccea5e4d-fe43-4557-ab9b-01b17561200f",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "Compile with: "
                    ],
                    [
                      "-O1 -g -fsanitize=address -fno-omit-frame-pointer",
                      [
                        [
                          "c"
                        ]
                      ]
                    ],
                    [
                      " "
                    ]
                  ]
                },
                "type": "text",
                "version": 0,
                "inline_content": [
                  {
                    "Text": "Compile with: "
                  },
                  {
                    "Text": "-O1 -g -fsanitize=address -fno-omit-frame-pointer",
                    "AttrFlags": 2
                  },
                  {
                    "Text": " "
                  }
                ]
              },
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509943410562,
                "id": "c864d415-6ff8-497d-96b5-4110587382bf",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509943410562,
                "parent_id": "ccea5e4d-fe43-4557-ab9b-01b17561200f",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "Add "
                    ],
                    [
                      "-fno-optimize-sibling-calls",
                      [
                        [
                          "c"
                        ]
                      ]
                    ],
                    [
                      "  for better callstacks"
                    ]
                  ]
                },
                "type": "text",
                "version": 0,
                "inline_content": [
                  {
                    "Text": "Add "
                  },
                  {
                    "Text": "-fno-optimize-sibling-calls",
                    "AttrFlags": 2
                  },
                  {
                    "Text": "  for better callstacks"
                  }
                ]
              },
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509943326218,
                "id": "5bf6a265-b2ae-4655-9faf-11676788116c",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509943326218,
                "parent_id": "ccea5e4d-fe43-4557-ab9b-01b17561200f",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "Link with: "
                    ],
                    [
                      "-g -fsanitize=address",
                      [
                        [
                          "c"
                        ]
                      ]
                    ],
                    [
                      " "
                    ]
                  ]
                },
                "type": "text",
                "version": 0,
                "inline_content": [
                  {
                    "Text": "Link with: "
                  },
                  {
                    "Text": "-g -fsanitize=address",
                    "AttrFlags": 2
                  },
                  {
                    "Text": " "
                  }
                ]
              },
              {
                "alive": true,
                "content": [
                  "921e518d-b230-4330-80e3-467b53bfcabc",
                  "fc8fbaee-528b-457a-b52b-fe87f05db4cc"
                ],
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509944340777,
                "id": "c66bd230-210f-47b1-ac55-55fdc7a21367",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509944340777,
                "parent_id": "ccea5e4d-fe43-4557-ab9b-01b17561200f",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "testing sanitizer is enabled"
                    ]
                  ]
                },
                "type": "toggle",
                "version": 0,
                "content_resolved": [
                  {
                    "alive": true,
                    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                    "created_time": 1509944357770,
                    "id": "921e518d-b230-4330-80e3-467b53bfcabc",
                    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                    "last_edited_time": 1509944357770,
                    "parent_id": "c66bd230-210f-47b1-ac55-55fdc7a21367",
                    "parent_table": "block",
                    "properties": {
                      "title": [
                        [
                          "It's good to verify that sanitizer is enabled and working. Add this snippet of code and call it from your code. It should trigger sanitizer"
                        ]
                      ]
                    },
                    "type": "text",
                    "version": 0,
                    "inline_content": [
                      {
                        "Text": "It's good to verify that sanitizer is enabled and working. Add this snippet of code and call it from your code. It should trigger sanitizer"
                      }
                    ]
                  },
                  {
                    "alive": true,
                    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                    "created_time": 1509944404781,
                    "id": "fc8fbaee-528b-457a-b52b-fe87f05db4cc",
                    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                    "last_edited_time": 1509944404781,
                    "parent_id": "c66bd230-210f-47b1-ac55-55fdc7a21367",
                    "parent_table": "block",
                    "properties": {
                      "language": [
                        [
                          "Java/C/C++/C#"
                        ]
                      ],
                      "title": [
                        [
                          "void trigger_address_sanitizer() {\n  char *a = (char*)malloc(4);\n  char c = a[5]; /* this line should trigger sanitizer */\n  printf(\"c: %d\\n\", (int)c);\n  free((void*)a);\n}"
                        ]
                      ]
                    },
                    "type": "code",
                    "version": 0,
                    "code": "void trigger_address_sanitizer() {\n  char *a = (char*)malloc(4);\n  char c = a[5]; /* this line should trigger sanitizer */\n  printf(\"c: %d\\n\", (int)c);\n  free((void*)a);\n}",
                    "code_language": "Java/C/C++/C#"
                  }
                ],
                "inline_content": [
                  {
                    "Text": "testing sanitizer is enabled"
                  }
                ]
              }
            ],
            "inline_content": [
              {
                "Text": "address sanitizer (memory corruptions), 2x slowdown"
              }
            ]
          },
          {
            "alive": true,
            "content": [
              "1e614258-1875-4d72-a519-cc9f56d27170",
              "518d6f5e-66ea-4095-8e52-fbbd70be9d4e",
              "fb74a562-b58d-4a13-8aa3-90b6f16d95c6"
            ],
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1509943488803,
            "id": "a2276f2d-e7b6-41f6-89dc-9bd7fc1ee07e",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1509943488803,
            "parent_id": "97b14779-764a-48ea-bdb2-cbe286951501",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "memory sanitizer (uninitialized reads), 3x slowdown"
                ]
              ]
            },
            "type": "toggle",
            "version": 0,
            "content_resolved": [
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509943561930,
                "id": "1e614258-1875-4d72-a519-cc9f56d27170",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509943561930,
                "parent_id": "a2276f2d-e7b6-41f6-89dc-9bd7fc1ee07e",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "https://clang.llvm.org/docs/MemorySanitizer.html",
                      [
                        [
                          "a",
                          "https://clang.llvm.org/docs/MemorySanitizer.html"
                        ]
                      ]
                    ]
                  ]
                },
                "type": "text",
                "version": 0,
                "inline_content": [
                  {
                    "Text": "https://clang.llvm.org/docs/MemorySanitizer.html",
                    "Link": "https://clang.llvm.org/docs/MemorySanitizer.html"
                  }
                ]
              },
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509943522021,
                "id": "518d6f5e-66ea-4095-8e52-fbbd70be9d4e",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509943522021,
                "parent_id": "a2276f2d-e7b6-41f6-89dc-9bd7fc1ee07e",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "Compile with "
                    ],
                    [
                      "-fsanitize=memory -fno-omit-frame-pointer -g -O2",
                      [
                        [
                          "c"
                        ]
                      ]
                    ],
                    [
                      " "
                    ]
                  ]
                },
                "type": "text",
                "version": 0,
                "inline_content": [
                  {
                    "Text": "Compile with "
                  },
                  {
                    "Text": "-fsanitize=memory -fno-omit-frame-pointer -g -O2",
                    "AttrFlags": 2
                  },
                  {
                    "Text": " "
                  }
                ]
              },
              {
                "alive": true,
                "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "created_time": 1509943527938,
                "id": "fb74a562-b58d-4a13-8aa3-90b6f16d95c6",
                "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
                "last_edited_time": 1509943527938,
                "parent_id": "a2276f2d-e7b6-41f6-89dc-9bd7fc1ee07e",
                "parent_table": "block",
                "properties": {
                  "title": [
                    [
                      "Link with "
                    ],
                    [
                      "-fsanitize=memory -g",
                      [
                        [
                          "c"
                        ]
                      ]
                    ],
                    [
                      "  "
                    ]
                  ]
                },
                "type": "text",
                "version": 0,
                "inline_content": [
                  {
                    "Text": "Link with "
                  },
                  {
                    "Text": "-fsanitize=memory -g",
                    "AttrFlags": 2
                  },
                  {
                    "Text": "  "
                  }
                ]
              }
            ],
            "inline_content": [
              {
                "Text": "memory sanitizer (uninitialized reads), 3x slowdown"
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "sanitizers"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "6e23df40-0a4e-47e1-9336-7b636ee61410",
          "08b8d321-a609-4ca8-a105-6df9330d65a3",
          "8c6549cd-d578-403e-a208-afe6bacb76d4"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1511325970363,
        "id": "e87d8255-ed5f-4aa1-920b-22f40ae0c382",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1511325970363,
        "parent_id": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "on mac"
            ]
          ]
        },
        "type": "toggle",
        "version": 0,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1511325976883,
            "id": "6e23df40-0a4e-47e1-9336-7b636ee61410",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1511325976883,
            "parent_id": "e87d8255-ed5f-4aa1-920b-22f40ae0c382",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "brew install llvm",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  "  installs latest version (currently 5.0)."
                ]
              ]
            },
            "type": "text",
            "version": 0,
            "inline_content": [
              {
                "Text": "brew install llvm",
                "AttrFlags": 2
              },
              {
                "Text": "  installs latest version (currently 5.0)."
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1511326011855,
            "id": "08b8d321-a609-4ca8-a105-6df9330d65a3",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1511326011855,
            "parent_id": "e87d8255-ed5f-4aa1-920b-22f40ae0c382",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "To not conflict with XCode, binaries are in "
                ],
                [
                  "/usr/local/Cellar/llvm/5.0.0/bin/",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  "` e..g. "
                ],
                [
                  "/usr/local/Cellar/llvm/5.0.0/bin/clang",
                  [
                    [
                      "c"
                    ]
                  ]
                ],
                [
                  " "
                ]
              ]
            },
            "type": "text",
            "version": 0,
            "inline_content": [
              {
                "Text": "To not conflict with XCode, binaries are in "
              },
              {
                "Text": "/usr/local/Cellar/llvm/5.0.0/bin/",
                "AttrFlags": 2
              },
              {
                "Text": "` e..g. "
              },
              {
                "Text": "/usr/local/Cellar/llvm/5.0.0/bin/clang",
                "AttrFlags": 2
              },
              {
                "Text": " "
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1511326047638,
            "id": "8c6549cd-d578-403e-a208-afe6bacb76d4",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1511326047638,
            "parent_id": "e87d8255-ed5f-4aa1-920b-22f40ae0c382",
            "parent_table": "block",
            "type": "text",
            "version": 0
          }
        ],
        "inline_content": [
          {
            "Text": "on mac"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "bcfc52fd-880c-4ce1-96bc-254aa87abc55",
          "62da9faf-1684-404d-bc01-8709e4f46a76",
          "84066e3b-cabb-4cdb-ba30-dfa41fbf1d39",
          "8947b074-06ed-43f2-88ec-b0dd049a1c59",
          "1e0d58b0-8350-46fd-9630-4c6fd8444605",
          "4fff2749-e6cf-45e8-b045-4a769ef2eacb",
          "f9d60eb1-3506-46e7-b0ea-81a789577772",
          "b93d6c38-e5e3-4e24-ac6c-4f3230cf7053",
          "936e1687-dd31-4c7b-aca9-28913808c14b"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1501802807561,
        "id": "1e84213a-b725-4b19-9999-f0403b149d84",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1501802807561,
        "parent_id": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Links"
            ]
          ]
        },
        "type": "toggle",
        "version": 0,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1501802811525,
            "id": "bcfc52fd-880c-4ce1-96bc-254aa87abc55",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1501802811525,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://arvid.io/2017/08/04/using-clang-on-windows/",
                  [
                    [
                      "a",
                      "https://arvid.io/2017/08/04/using-clang-on-windows/"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "https://arvid.io/2017/08/04/using-clang-on-windows/",
                "Link": "https://arvid.io/2017/08/04/using-clang-on-windows/"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508384888480,
            "id": "62da9faf-1684-404d-bc01-8709e4f46a76",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508384888480,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://metricpanda.com/rival-fortress-update-27-compiling-with-clang-on-windows",
                  [
                    [
                      "a",
                      "https://metricpanda.com/rival-fortress-update-27-compiling-with-clang-on-windows"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "https://metricpanda.com/rival-fortress-update-27-compiling-with-clang-on-windows",
                "Link": "https://metricpanda.com/rival-fortress-update-27-compiling-with-clang-on-windows"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508386562347,
            "id": "84066e3b-cabb-4cdb-ba30-dfa41fbf1d39",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508386562347,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://stackoverflow.com/questions/46553436/building-with-cmake-ninja-and-clang-on-windows",
                  [
                    [
                      "a",
                      "https://stackoverflow.com/questions/46553436/building-with-cmake-ninja-and-clang-on-windows"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "https://stackoverflow.com/questions/46553436/building-with-cmake-ninja-and-clang-on-windows",
                "Link": "https://stackoverflow.com/questions/46553436/building-with-cmake-ninja-and-clang-on-windows"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508386617878,
            "id": "8947b074-06ed-43f2-88ec-b0dd049a1c59",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508386617878,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://www.youtube.com/watch?v=TLh—v8OxHE",
                  [
                    [
                      "a",
                      "https://www.youtube.com/watch?v=TLh—v8OxHE"
                    ]
                  ]
                ],
                [
                  " : gcc \u0026 clang \u0026 VSCode"
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "https://www.youtube.com/watch?v=TLh—v8OxHE",
                "Link": "https://www.youtube.com/watch?v=TLh—v8OxHE"
              },
              {
                "Text": " : gcc \u0026 clang \u0026 VSCode"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508386756422,
            "id": "1e0d58b0-8350-46fd-9630-4c6fd8444605",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508386756422,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "http://blog.johannesmp.com/2015/09/01/installing-clang-on-windows-pt2/",
                  [
                    [
                      "a",
                      "http://blog.johannesmp.com/2015/09/01/installing-clang-on-windows-pt2/"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "http://blog.johannesmp.com/2015/09/01/installing-clang-on-windows-pt2/",
                "Link": "http://blog.johannesmp.com/2015/09/01/installing-clang-on-windows-pt2/"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508386903448,
            "id": "4fff2749-e6cf-45e8-b045-4a769ef2eacb",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508386903448,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://bitsmaker.gitlab.io/post/clang-tidy-from-vs2015/",
                  [
                    [
                      "a",
                      "https://bitsmaker.gitlab.io/post/clang-tidy-from-vs2015/"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "https://bitsmaker.gitlab.io/post/clang-tidy-from-vs2015/",
                "Link": "https://bitsmaker.gitlab.io/post/clang-tidy-from-vs2015/"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508387002064,
            "id": "f9d60eb1-3506-46e7-b0ea-81a789577772",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508387002064,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://www.reddit.com/r/cpp/comments/67av0m/is_there_a_better_way_to_marry_cmake_clang_and_vs/",
                  [
                    [
                      "a",
                      "https://www.reddit.com/r/cpp/comments/67av0m/is_there_a_better_way_to_marry_cmake_clang_and_vs/"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "https://www.reddit.com/r/cpp/comments/67av0m/is_there_a_better_way_to_marry_cmake_clang_and_vs/",
                "Link": "https://www.reddit.com/r/cpp/comments/67av0m/is_there_a_better_way_to_marry_cmake_clang_and_vs/"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508387003985,
            "id": "b93d6c38-e5e3-4e24-ac6c-4f3230cf7053",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508387003985,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://stackoverflow.com/questions/38171878/how-do-i-tell-cmake-to-use-clang-on-windows",
                  [
                    [
                      "a",
                      "https://stackoverflow.com/questions/38171878/how-do-i-tell-cmake-to-use-clang-on-windows"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 0,
            "inline_content": [
              {
                "Text": "https://stackoverflow.com/questions/38171878/how-do-i-tell-cmake-to-use-clang-on-windows",
                "Link": "https://stackoverflow.com/questions/38171878/how-do-i-tell-cmake-to-use-clang-on-windows"
              }
            ]
          },
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1508386615687,
            "id": "936e1687-dd31-4c7b-aca9-28913808c14b",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1508386615687,
            "parent_id": "1e84213a-b725-4b19-9999-f0403b149d84",
            "parent_table": "block",
            "type": "text",
            "version": 0
          }
        ],
        "inline_content": [
          {
            "Text": "Links"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "607fad02-afa2-4ee4-8db0-b48c9e0f56a0"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1512368083298,
        "id": "6fb7aad4-876a-46d5-9b29-233c0a6f4320",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1512368083298,
        "parent_id": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "misc"
            ]
          ]
        },
        "type": "toggle",
        "version": 0,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1512368090618,
            "id": "607fad02-afa2-4ee4-8db0-b48c9e0f56a0",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1512368090618,
            "parent_id": "6fb7aad4-876a-46d5-9b29-233c0a6f4320",
            "parent_table": "block",
            "properties": {
              "language": [
                [
                  "Plain Text"
                ]
              ],
              "title": [
                [
                  "http://stackoverflow.com/questions/28203937/installing-llvm-libraries-along-with-xcode\nhttp://llvm.org/releases/3.8.0/tools/clang/docs/\nhttps://github.com/tpoechtrager/wclang - allows cross-compiling Windows code on Linux using clang wrapper\nhttp://eli.thegreenplace.net/2014/05/01/modern-source-to-source-transformation-with-clang-and-libtooling/\nhttp://eli.thegreenplace.net/2011/07/03/parsing-c-in-python-with-clang/\nhttp://www.seethroughskin.com/blog/clang-ast-parsing-for-automated-code-generation/\nhttp://www.seethroughskin.com/blog/simplified-clang-python-bindings/\nhttp://seanhn.wordpress.com/2012/07/10/better-interpreter-fuzzing-with-clang/\nhttp://eli.thegreenplace.net/2014/07/29/ast-matchers-and-clang-refactoring-tools\n\nhttps://github.com/jeaye/color_coded\nhttps://github.com/Neopallium/lua-clang-cindex - luajit bindings\nhttps://github.com/llvm-mirror/clang/tree/master/bindings/python\nhttps://github.com/indygreg/clanalyze/\nhttps://github.com/sbinet/go-clang\n\nhttps://github.com/mjsabby/ClangSharp, http://www.clangsharp.org/\nhttps://github.com/SimonRichards/clang-sharp, https://github.com/SimonRichards/ClassMirror\n\nhttp://blog.quarkslab.com/clang-hardening-cheat-sheet.html\n\nASAN:\nhttps://gist.github.com/kwk/4171e37f4bcdf7705329\nhttp://btorpey.github.io/blog/2014/03/27/using-clangs-address-sanitizer/\n\n\nhttps://alastairs-place.net/blog/2016/05/20/code-coverage-from-the-command-line-with-clang/\n\nOn mac:\n\nbrew install llvm --with-clang --with-clang-extra-tool --with-compiler-rt --with-libcxx --with-lld --with-lld --with-python --with-rtti --with-utils --HEAD\n\n\n/usr/local/opt/llvm/bin/clang\n\nmkdir -p ~/Library/Python/2.7/lib/python/site-packages\necho '/usr/local/opt/llvm/lib/python2.7/site-packages' \u003e ~/Library/Python/2.7/lib/python/site-packages/homebrew.pth\n\nLD_LIBRARY_PATH=/usr/local/opt/llvm/lib ~/src/pyclang/cindex-dump.py draw_flood.c\n\nIn each *.py tool:\n    from clang.cindex import Config\n    Config.set_library_path(LLVM_LIB_DIR)\n\n-std=c++11\n-std=gnu++11\n-Weverything\n-Wall\n\n-stdlib=libc++  : use clang's C++ library (as opposed to OS's libstdc++)"
                ]
              ]
            },
            "type": "code",
            "version": 0,
            "code": "http://stackoverflow.com/questions/28203937/installing-llvm-libraries-along-with-xcode\nhttp://llvm.org/releases/3.8.0/tools/clang/docs/\nhttps://github.com/tpoechtrager/wclang - allows cross-compiling Windows code on Linux using clang wrapper\nhttp://eli.thegreenplace.net/2014/05/01/modern-source-to-source-transformation-with-clang-and-libtooling/\nhttp://eli.thegreenplace.net/2011/07/03/parsing-c-in-python-with-clang/\nhttp://www.seethroughskin.com/blog/clang-ast-parsing-for-automated-code-generation/\nhttp://www.seethroughskin.com/blog/simplified-clang-python-bindings/\nhttp://seanhn.wordpress.com/2012/07/10/better-interpreter-fuzzing-with-clang/\nhttp://eli.thegreenplace.net/2014/07/29/ast-matchers-and-clang-refactoring-tools\n\nhttps://github.com/jeaye/color_coded\nhttps://github.com/Neopallium/lua-clang-cindex - luajit bindings\nhttps://github.com/llvm-mirror/clang/tree/master/bindings/python\nhttps://github.com/indygreg/clanalyze/\nhttps://github.com/sbinet/go-clang\n\nhttps://github.com/mjsabby/ClangSharp, http://www.clangsharp.org/\nhttps://github.com/SimonRichards/clang-sharp, https://github.com/SimonRichards/ClassMirror\n\nhttp://blog.quarkslab.com/clang-hardening-cheat-sheet.html\n\nASAN:\nhttps://gist.github.com/kwk/4171e37f4bcdf7705329\nhttp://btorpey.github.io/blog/2014/03/27/using-clangs-address-sanitizer/\n\n\nhttps://alastairs-place.net/blog/2016/05/20/code-coverage-from-the-command-line-with-clang/\n\nOn mac:\n\nbrew install llvm --with-clang --with-clang-extra-tool --with-compiler-rt --with-libcxx --with-lld --with-lld --with-python --with-rtti --with-utils --HEAD\n\n\n/usr/local/opt/llvm/bin/clang\n\nmkdir -p ~/Library/Python/2.7/lib/python/site-packages\necho '/usr/local/opt/llvm/lib/python2.7/site-packages' \u003e ~/Library/Python/2.7/lib/python/site-packages/homebrew.pth\n\nLD_LIBRARY_PATH=/usr/local/opt/llvm/lib ~/src/pyclang/cindex-dump.py draw_flood.c\n\nIn each *.py tool:\n    from clang.cindex import Config\n    Config.set_library_path(LLVM_LIB_DIR)\n\n-std=c++11\n-std=gnu++11\n-Weverything\n-Wall\n\n-stdlib=libc++  : use clang's C++ library (as opposed to OS's libstdc++)",
            "code_language": "Plain Text"
          }
        ],
        "inline_content": [
          {
            "Text": "misc"
          }
        ]
      },
      {
        "alive": true,
        "content": [
          "7c246a2c-337d-4fe6-9b62-9623d82ac6b9"
        ],
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1520966080593,
        "id": "d4e5355a-83e4-41cf-b78c-bcb45d3ee8ec",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1520966091073,
        "parent_id": "c843f1e0-eea9-43ed-b394-009b7a9f1b56",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "clang-cl for windows"
            ]
          ]
        },
        "type": "toggle",
        "version": 65,
        "content_resolved": [
          {
            "alive": true,
            "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "created_time": 1520966091073,
            "id": "7c246a2c-337d-4fe6-9b62-9623d82ac6b9",
            "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
            "last_edited_time": 1520966093591,
            "parent_id": "d4e5355a-83e4-41cf-b78c-bcb45d3ee8ec",
            "parent_table": "block",
            "properties": {
              "title": [
                [
                  "https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Building_Firefox_on_Windows_with_clang-cl",
                  [
                    [
                      "a",
                      "https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Building_Firefox_on_Windows_with_clang-cl"
                    ]
                  ]
                ]
              ]
            },
            "type": "bulleted_list",
            "version": 13,
            "inline_content": [
              {
                "Text": "https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Building_Firefox_on_Windows_with_clang-cl",
                "Link": "https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Build_Instructions/Building_Firefox_on_Windows_with_clang-cl"
              }
            ]
          }
        ],
        "inline_content": [
          {
            "Text": "clang-cl for windows"
          }
        ]
      }
    ],
    "title": "clang",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 21
    }
  ],
  "Tables": null
}