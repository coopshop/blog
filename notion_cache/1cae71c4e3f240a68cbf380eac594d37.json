{
  "ID": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
  "Root": {
    "alive": true,
    "content": [
      "b1bd6ab7-4afe-4eb3-998d-a0f0978fbaec",
      "6f888714-dd8a-43c9-b292-f40620bb53f9",
      "573f1dc7-e265-4385-a106-c9f8e4e2fd05",
      "c2e55e3d-a4ac-4da4-8919-b04c15084ec2",
      "074f774f-6189-44e2-a602-8a81b51cb9dc",
      "48924878-7631-4abb-b5dd-6875c51b20bb",
      "e74098e0-bd81-4799-a29e-5325bb8046ec",
      "c1960ff8-da12-4b90-9dc5-4057e9e7f091",
      "58f48737-a7af-490c-b0ea-d953cbadb3d4",
      "fe9b976c-626f-4166-8cbb-30fa318d4d93",
      "d92029d5-d3e4-436f-834b-2fa2633ead2d",
      "aeea3208-400f-4570-880c-47f59f7e26c9",
      "1f2b86f5-d0f7-40da-a647-4afff128d966",
      "0d40ddb0-d8b0-43f2-901d-61f562f3ab6e",
      "450734f1-363e-451b-821d-ea2dc1c4a442",
      "08cb40d2-7bfd-4969-890b-f39902834e03"
    ],
    "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "created_time": 1474753825196,
    "format": {
      "page_full_width": true,
      "page_small_text": true
    },
    "id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
    "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
    "last_edited_time": 1474753825196,
    "parent_id": "6f70163e-a5b8-4ba9-928a-faa2e45d1f51",
    "parent_table": "block",
    "properties": {
      "title": [
        [
          "Context"
        ]
      ]
    },
    "type": "page",
    "version": 0,
    "content_resolved": [
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474753831082,
        "id": "b1bd6ab7-4afe-4eb3-998d-a0f0978fbaec",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474753831082,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "http://go-talks.appspot.com/github.com/dkondratovych/golang-ua-meetup/go-context/ctx.slide#35",
              [
                [
                  "a",
                  "http://go-talks.appspot.com/github.com/dkondratovych/golang-ua-meetup/go-context/ctx.slide#35"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 0,
        "inline_content": [
          {
            "Text": "http://go-talks.appspot.com/github.com/dkondratovych/golang-ua-meetup/go-context/ctx.slide#35",
            "Link": "http://go-talks.appspot.com/github.com/dkondratovych/golang-ua-meetup/go-context/ctx.slide#35"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474753964456,
        "id": "6f888714-dd8a-43c9-b292-f40620bb53f9",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474753964456,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "type Context interface {\n    // Deadline returns the time when work done\n    // on behalf of this context should be canceled.\n    Deadline() (deadline time.Time, ok bool)\n    // Done returns a channel that's closed when work done \n    // on behalf of this context should be canceled.\n    Done() \u003c-chan struct{}\n    // Err returns a non-nil error value after Done is closed.\n    Err() error\n    // Value returns the value associated with this context for key\n    Value(key interface{}) interface{}\n}"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "type Context interface {\n    // Deadline returns the time when work done\n    // on behalf of this context should be canceled.\n    Deadline() (deadline time.Time, ok bool)\n    // Done returns a channel that's closed when work done \n    // on behalf of this context should be canceled.\n    Done() \u003c-chan struct{}\n    // Err returns a non-nil error value after Done is closed.\n    Err() error\n    // Value returns the value associated with this context for key\n    Value(key interface{}) interface{}\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754011593,
        "id": "573f1dc7-e265-4385-a106-c9f8e4e2fd05",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754011593,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func Background() Context\nfunc TODO() Context\nfunc WithCancel(parent Context) (ctx Context, cancel CancelFunc)\nfunc WithDeadline(parent Context, deadline time.Time) (Context, CancelFunc)\nfunc WithTimeout(parent Context, timeout time.Duration) (Context, CancelFunc)\nfunc WithValue(parent Context, key, val interface{}) Context"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "func Background() Context\nfunc TODO() Context\nfunc WithCancel(parent Context) (ctx Context, cancel CancelFunc)\nfunc WithDeadline(parent Context, deadline time.Time) (Context, CancelFunc)\nfunc WithTimeout(parent Context, timeout time.Duration) (Context, CancelFunc)\nfunc WithValue(parent Context, key, val interface{}) Context",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1475121847282,
        "id": "c2e55e3d-a4ac-4da4-8919-b04c15084ec2",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1475121847282,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Javascript"
            ]
          ],
          "title": [
            [
              "// modify context of http.Request\nfunc middleware(h http.HandlerFunc) http.HandlerFunc {\n    return func(w http.ResponseWriter, r *http.Request) {\n        // Use request method context, which returns context, if ctx is nil\n        // then creates new background context - context.Background()\n        ctx = r.Context()\n        // Build context variations on top of background context\n        ctx = context.WithValue(ctx, \"some_key\", \"some_value\")\n        // tctx, cancelFunc := context.WithTimeout(ctx, time.Duration(5 * time.Second))\n        // deadline := time.Now().Add(time.Duration(30 * time.Second))\n        // dctx, cancelFunc := context.WithDeadline(ctx, deadline)\n        // WithContext returns a shallow copy of r with its context changed to ctx.\n        r = r.WithContext(ctx)\n        h(w, r)\n    }\n}"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "// modify context of http.Request\nfunc middleware(h http.HandlerFunc) http.HandlerFunc {\n    return func(w http.ResponseWriter, r *http.Request) {\n        // Use request method context, which returns context, if ctx is nil\n        // then creates new background context - context.Background()\n        ctx = r.Context()\n        // Build context variations on top of background context\n        ctx = context.WithValue(ctx, \"some_key\", \"some_value\")\n        // tctx, cancelFunc := context.WithTimeout(ctx, time.Duration(5 * time.Second))\n        // deadline := time.Now().Add(time.Duration(30 * time.Second))\n        // dctx, cancelFunc := context.WithDeadline(ctx, deadline)\n        // WithContext returns a shallow copy of r with its context changed to ctx.\n        r = r.WithContext(ctx)\n        h(w, r)\n    }\n}",
        "code_language": "Javascript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754136132,
        "id": "074f774f-6189-44e2-a602-8a81b51cb9dc",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754136132,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// pattern for setting/getting value in a context\ntype contextKey string\n\n// making it un-exported package variable avoid naming conflics between\n// packages\nvar userContextKey contextKey = \"user\"\n\nfunc NewUserContext(ctx context.Context, user *User) context.Context {\n    return context.WithValue(ctx, userContextKey, user)\n}\n\nfunc UserFromContext(ctx context.Context) (*User, bool) {\n    u, ok := ctx.Value(userContextKey).(*User)\n    return u, ok\n}\n\nfunc UserMustFromContext(ctx context.Context) *User {\n    u, ok := ctx.Value(userContextKey).(*User)\n    if !ok {\n        panic(\"user not found in context\")\n    }\n    return u\n}"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "// pattern for setting/getting value in a context\ntype contextKey string\n\n// making it un-exported package variable avoid naming conflics between\n// packages\nvar userContextKey contextKey = \"user\"\n\nfunc NewUserContext(ctx context.Context, user *User) context.Context {\n    return context.WithValue(ctx, userContextKey, user)\n}\n\nfunc UserFromContext(ctx context.Context) (*User, bool) {\n    u, ok := ctx.Value(userContextKey).(*User)\n    return u, ok\n}\n\nfunc UserMustFromContext(ctx context.Context) *User {\n    u, ok := ctx.Value(userContextKey).(*User)\n    if !ok {\n        panic(\"user not found in context\")\n    }\n    return u\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1475806392406,
        "id": "48924878-7631-4abb-b5dd-6875c51b20bb",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1475806392406,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Javascript"
            ]
          ],
          "title": [
            [
              "func handlerRequestWithCancelation(w http.ResponseWriter, r *http.Request) {\n    longRunningCalculation := func(ctx context.Context) {\n        for i := 0; ; i++ {\n            select {\n            case \u003c-ctx.Done():\n                return\n            default:\n                time.Sleep(1 * time.Second)\n                fmt.Printf(\"Worker %d \\n\", i)\n            }\n        }\n    }\n\n    // the context is canceled when the ServeHTTP method returns\n    go longRunningCalculation(r.Context())\n\n    // give some time for longRunningCalculation to do some work\n    time.Sleep(5 * time.Second)\n\n    io.WriteString(w, \"bazinga!\")\n    return\n}"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "func handlerRequestWithCancelation(w http.ResponseWriter, r *http.Request) {\n    longRunningCalculation := func(ctx context.Context) {\n        for i := 0; ; i++ {\n            select {\n            case \u003c-ctx.Done():\n                return\n            default:\n                time.Sleep(1 * time.Second)\n                fmt.Printf(\"Worker %d \\n\", i)\n            }\n        }\n    }\n\n    // the context is canceled when the ServeHTTP method returns\n    go longRunningCalculation(r.Context())\n\n    // give some time for longRunningCalculation to do some work\n    time.Sleep(5 * time.Second)\n\n    io.WriteString(w, \"bazinga!\")\n    return\n}",
        "code_language": "Javascript"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754576909,
        "id": "e74098e0-bd81-4799-a29e-5325bb8046ec",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754576909,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "// explicitly cancelling context\nfunc handlerSearchCancel(w http.ResponseWriter, r *http.Request) {\n    var ctx context.Context\n    var cancel context.CancelFunc\n\n    ctx, cancel = context.WithCancel(r.Context())\n    defer cancel()\n\n    // Close context.Done channel in 4 seconds\n    go func() {\n        time.Sleep(4 * time.Second)\n        cancel()\n    }()\n\n    select {\n    case \u003c-ctx.Done():\n        log.Print(ctx.Err())\n        return\n    case result := \u003c-longRunningCalculation():\n        io.WriteString(w, result)\n    }\n\n    return\n}"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "// explicitly cancelling context\nfunc handlerSearchCancel(w http.ResponseWriter, r *http.Request) {\n    var ctx context.Context\n    var cancel context.CancelFunc\n\n    ctx, cancel = context.WithCancel(r.Context())\n    defer cancel()\n\n    // Close context.Done channel in 4 seconds\n    go func() {\n        time.Sleep(4 * time.Second)\n        cancel()\n    }()\n\n    select {\n    case \u003c-ctx.Done():\n        log.Print(ctx.Err())\n        return\n    case result := \u003c-longRunningCalculation():\n        io.WriteString(w, result)\n    }\n\n    return\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754644226,
        "id": "c1960ff8-da12-4b90-9dc5-4057e9e7f091",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754644226,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "How can I use WithTimeout and WithDeadline ?",
              [
                [
                  "b"
                ]
              ]
            ]
          ]
        },
        "type": "text",
        "version": 0,
        "inline_content": [
          {
            "Text": "How can I use WithTimeout and WithDeadline ?",
            "AttrFlags": 1
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754644790,
        "id": "58f48737-a7af-490c-b0ea-d953cbadb3d4",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754644790,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Context with timeout"
            ]
          ]
        },
        "type": "text",
        "version": 0,
        "inline_content": [
          {
            "Text": "Context with timeout"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754644790,
        "id": "fe9b976c-626f-4166-8cbb-30fa318d4d93",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754644790,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "ctx, cancel = context.WithTimeout(ctx, time.Duration(7 * time.Second))\ndefer cancel()"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "ctx, cancel = context.WithTimeout(ctx, time.Duration(7 * time.Second))\ndefer cancel()",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754644790,
        "id": "d92029d5-d3e4-436f-834b-2fa2633ead2d",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754644790,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Context with deadline"
            ]
          ]
        },
        "type": "text",
        "version": 0,
        "inline_content": [
          {
            "Text": "Context with deadline"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754707028,
        "id": "aeea3208-400f-4570-880c-47f59f7e26c9",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754707028,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "deadline := time.Now().Add(time.Duration(30 * time.Second))\ndctx, cancel := context.WithDeadline(ctx, deadline)\ndefer cancel()"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "deadline := time.Now().Add(time.Duration(30 * time.Second))\ndctx, cancel := context.WithDeadline(ctx, deadline)\ndefer cancel()",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754692227,
        "id": "1f2b86f5-d0f7-40da-a647-4afff128d966",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754692227,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "title": [
            [
              "Pattern here is the same, you have to wait for signal from ctx.Done"
            ]
          ]
        },
        "type": "text",
        "version": 0,
        "inline_content": [
          {
            "Text": "Pattern here is the same, you have to wait for signal from ctx.Done"
          }
        ]
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754729604,
        "id": "0d40ddb0-d8b0-43f2-901d-61f562f3ab6e",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754729604,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "select {\ncase \u003c-ctx.Done():\n    log.Print(ctx.Err())\n    return\ncase result := \u003c-longRunningCalculation():\n    io.WriteString(w, result)\n}"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "select {\ncase \u003c-ctx.Done():\n    log.Print(ctx.Err())\n    return\ncase result := \u003c-longRunningCalculation():\n    io.WriteString(w, result)\n}",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754783082,
        "id": "450734f1-363e-451b-821d-ea2dc1c4a442",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754783082,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "properties": {
          "language": [
            [
              "Go"
            ]
          ],
          "title": [
            [
              "func handlerSearchTimeout(w http.ResponseWriter, r *http.Request) {\n    var ctx context.Context\n    var cancel context.CancelFunc\n\n    ctx, cancel = context.WithTimeout(r.Context(), time.Duration(2*time.Second))\n    defer cancel()\n\n    request, err := http.NewRequest(http.MethodGet, \"http://localhost:8181/timeout\", nil)\n    if err != nil {\n        log.Println(err.Error())\n        return\n    }\n    // You can context separately for each request\n    request = request.WithContext(ctx)\n\n    client := \u0026http.Client{}\n    response, err := client.Do(request)\n    // You will get an error \"net/http: request canceled\" when request timeout exceeds limits\n    if err != nil {\n        log.Println(err.Error())\n        return\n    }\n    // ......"
            ]
          ]
        },
        "type": "code",
        "version": 0,
        "code": "func handlerSearchTimeout(w http.ResponseWriter, r *http.Request) {\n    var ctx context.Context\n    var cancel context.CancelFunc\n\n    ctx, cancel = context.WithTimeout(r.Context(), time.Duration(2*time.Second))\n    defer cancel()\n\n    request, err := http.NewRequest(http.MethodGet, \"http://localhost:8181/timeout\", nil)\n    if err != nil {\n        log.Println(err.Error())\n        return\n    }\n    // You can context separately for each request\n    request = request.WithContext(ctx)\n\n    client := \u0026http.Client{}\n    response, err := client.Do(request)\n    // You will get an error \"net/http: request canceled\" when request timeout exceeds limits\n    if err != nil {\n        log.Println(err.Error())\n        return\n    }\n    // ......",
        "code_language": "Go"
      },
      {
        "alive": true,
        "created_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "created_time": 1474754785564,
        "id": "08cb40d2-7bfd-4969-890b-f39902834e03",
        "last_edited_by": "bb760e2d-d679-4b64-b2a9-03005b21870a",
        "last_edited_time": 1474754785564,
        "parent_id": "1cae71c4-e3f2-40a6-8cbf-380eac594d37",
        "parent_table": "block",
        "type": "text",
        "version": 0
      }
    ],
    "title": "Context",
    "format_page": {
      "page_cover": "",
      "page_cover_position": 0,
      "page_font": "",
      "page_full_width": true,
      "page_icon": "",
      "page_small_text": true
    }
  },
  "Users": [
    {
      "email": "kkowalczyk@gmail.com",
      "family_name": "Kowalczyk",
      "given_name": "Krzysztof",
      "id": "bb760e2d-d679-4b64-b2a9-03005b21870a",
      "locale": "en",
      "mobile_onboarding_completed": true,
      "onboarding_completed": true,
      "profile_photo": "https://s3-us-west-2.amazonaws.com/public.notion-static.com/2dcaa66c-7674-4ff6-9924-601785b63561/head-bw-640x960.png",
      "time_zone": "America/Los_Angeles",
      "version": 20
    }
  ],
  "Tables": null
}